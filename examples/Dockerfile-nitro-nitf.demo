FROM ubuntu:focal AS nitro-sources
ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /polytracker/the_klondike
RUN apt-get update && \
	apt-get install -y git && \
	git clone https://github.com/mdaus/nitro.git

FROM trailofbits/polytracker:latest
LABEL org.opencontainers.image.authors="kelly.kaoudis@trailofbits.com"
WORKDIR /polytracker/the_klondike

COPY --from=nitro-sources /polytracker/the_klondike/nitro /polytracker/the_klondike/nitro
RUN apt-get update && \
	apt-get install -y \
		libc++-11-dev \
		libcurl4-openssl-dev \
		libssl-dev \
		swig

# Patch Nitro so we can use Clang thus LLVM! Otherwise, assumes GNU or MSVC.
WORKDIR /polytracker/the_klondike/nitro
COPY allow_clang_usage.patch .
RUN git apply allow_clang_usage.patch

RUN	mkdir -p build/artifacts/wllvm && \
	export WLLVM_ARTIFACT_STORE=build/artifacts/wllvm

WORKDIR /polytracker/the_klondike/nitro/build

# linking some of the internal Nitro "coda-oss" deps fails without libstdc/++ since coda-oss
# does some macro stuff around whether various std functions it redefines are there
RUN polytracker build \
		cmake \
			-DCMAKE_C_COMPILER=clang\
			-DCMAKE_C_FLAGS="-pthread -w -D_POSIX_C_SOURCE=200809L" \
			-DCMAKE_CXX_COMPILER=clang++ \
			-DCMAKE_CXX_FLAGS="-pthread -w -D_POSIX_C_SOURCE=200809L" \
			-DPYTHON_HOME=/usr/bin/python3 \
			-DCODA_BUILD_TESTS=OFF \
			-DCMAKE_INSTALL_PREFIX=artifacts \
			-DENABLE_SWIG=ON \
			.. && \
	polytracker build \
		cmake --build . -j$(nproc)

#RUN polytracker instrument-targets \
#	--journal-path=artifacts/blight_journal.jsonl \
#	--taint \
#	--ftrace \
#	show_nitf++
#RUN mv show_nitf++.instrumented nitro_track
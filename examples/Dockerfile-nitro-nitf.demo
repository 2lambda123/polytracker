FROM ubuntu:focal AS nitro-sources
ENV DEBIAN_FRONTEND=noninteractive

#=================================
# sources for the project to be instrumented

WORKDIR /polytracker/the_klondike
RUN apt-get update && \
	apt-get install -y git
RUN git clone https://github.com/mdaus/nitro.git

#=================================
# Create a separate image with the latest polytracker source

FROM trailofbits/polytracker:latest
LABEL org.opencontainers.image.authors="kelly.kaoudis@trailofbits.com"
WORKDIR /polytracker/the_klondike

#=================================
# Manage the nitro configuration & build

RUN apt-get update && \ 
	apt-get install -y \
		apt-utils \
		libboost-all-dev \
		libcurl4-openssl-dev \
		libssl-dev \
		g++-11 \
		swig

COPY --from=nitro-sources /polytracker/the_klondike/nitro /polytracker/the_klondike/nitro
WORKDIR /polytracker/the_klondike/nitro
RUN	mkdir build && \
	mkdir poly_artifacts && \
	export WLLVM_ARTIFACT_STORE=poly_artifacts

WORKDIR /polytracker/the_klondike/nitro/build

# set cxx flags based on https://releases.llvm.org/5.0.1/tools/clang/docs/Toolchain.html#id6
# so that we get stdlib functions with clang yay
RUN polytracker build cmake \
	-DCMAKE_INSTALL_PREFIX=/polytracker/the_klondike/nitro/poly_artifacts \
	-DCMAKE_BUILD_TYPE=Release \
	-DBUILD_SHARED_LIBS=OFF \
	-DCMAKE_C_COMPILER=clang \
	-DCMAKE_C_FLAGS="-w" \
	-DCMAKE_CXX_COMPILER=clang++ \
	-DCMAKE_CXX_FLAGS="-w" \
	-DCODA_INSTALL_TESTS=OFF \
	-DCODA_BUILD_TESTS=OFF \
	-DPYTHON_HOME=/usr/bin/python3 \
	-DENABLE_BOOST=OFF \
	-DENABLE_SWIG=OFF \
	-DENABLE_ZIP=ON \
	..

RUN polytracker build cmake \
	--build . -j

RUN polytracker build cmake \
	--build . \
	--target install

# # Now instrument the output binary
# RUN polytracker instrument-targets --taint --ftrace nitro
# RUN mv nitro.instrumented nitro_track
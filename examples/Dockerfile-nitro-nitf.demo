FROM ubuntu:focal AS nitro-sources
ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /polytracker/the_klondike
RUN apt-get update && \
	apt-get install -y git
RUN git clone https://github.com/mdaus/nitro.git

FROM trailofbits/polytracker:latest
LABEL org.opencontainers.image.authors="kelly.kaoudis@trailofbits.com"
WORKDIR /polytracker/the_klondike

COPY --from=nitro-sources /polytracker/the_klondike/nitro /polytracker/the_klondike/nitro

RUN apt-get update && \ 
	apt-get install -y \
		clang-11 \
		libcurl4-openssl-dev \
		libssl-dev \
		swig

#=================================
# Patch Nitro to disable a GCC GNU version based hack so we can use Clang thus LLVM!
# The internal "Code" deps of Nitro cannot be built with Clang since "Coda" attempts
# to alias a stdlib function, is_trivially_copyable, and does a version hack to figure
# out how it should add in the custom reimplementation.

WORKDIR /polytracker/the_klondike/nitro
COPY clang_version_symbols.patch .
RUN git apply clang_version_symbols.patch

#=================================
RUN	mkdir -p build/llvm_artifacts && \
	export WLLVM_ARTIFACT_STORE=build/llvm_artifacts

WORKDIR /polytracker/the_klondike/nitro/build

# linking some of the internal "Coda" deps of Nitro fails without libstdc/++
RUN polytracker build cmake \
	-DCMAKE_BUILD_TYPE=Release \
	-DCMAKE_C_COMPILER=/usr/bin/clang-11 \
	-DCMAKE_C_FLAGS="-w -stdlib=libstdc" \
	-DCMAKE_CXX_COMPILER=/usr/bin/clang++-11 \
	-DCMAKE_CXX_FLAGS="-w -stdlib=libstdc++" \
	-DCODA_INSTALL_TESTS=OFF \
	-DCODA_BUILD_TESTS=OFF \
	-DPYTHON_HOME=/usr/bin/python3 \
	-DENABLE_BOOST=OFF \
	-DENABLE_SWIG=OFF \
	-DENABLE_ZIP=ON \
	..

RUN polytracker build cmake \
	--build . -j

RUN polytracker build cmake \
	--build . \
	--target install

# # Now instrument the output binary
# RUN polytracker instrument-targets --taint --ftrace nitro
# RUN mv nitro.instrumented nitro_track